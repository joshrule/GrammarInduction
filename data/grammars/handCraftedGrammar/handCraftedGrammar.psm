:- include('prove.psm').
:- dynamic 'Decades_1_values'/1.
values('Decades_1', Vs,a@uniform) :- 'Decades_1_values'(Vs).
'Decades_1_values'([1,2,3,4,5,6,7,8]).
:- assert_lpn_value_pred('Decades_1', 'Decades_1_values').

:- dynamic 'Equal_2_values'/1.
values('Equal_2', Vs,a@uniform) :- 'Equal_2_values'(Vs).
'Equal_2_values'([1]).
:- assert_lpn_value_pred('Equal_2', 'Equal_2_values').

:- dynamic 'LargerBase_2_values'/1.
values('LargerBase_2', Vs,a@uniform) :- 'LargerBase_2_values'(Vs).
'LargerBase_2_values'([1,2]).
:- assert_lpn_value_pred('LargerBase_2', 'LargerBase_2_values').

:- dynamic 'Less_2_values'/1.
values('Less_2', Vs,a@uniform) :- 'Less_2_values'(Vs).
'Less_2_values'([1]).
:- assert_lpn_value_pred('Less_2', 'Less_2_values').

:- dynamic 'MDecades_2_values'/1.
values('MDecades_2', Vs,a@uniform) :- 'MDecades_2_values'(Vs).
'MDecades_2_values'([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]).
:- assert_lpn_value_pred('MDecades_2', 'MDecades_2_values').

:- dynamic 'MOnes_2_values'/1.
values('MOnes_2', Vs,a@uniform) :- 'MOnes_2_values'(Vs).
'MOnes_2_values'([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]).
:- assert_lpn_value_pred('MOnes_2', 'MOnes_2_values').

:- dynamic 'MTeens_2_values'/1.
values('MTeens_2', Vs,a@uniform) :- 'MTeens_2_values'(Vs).
'MTeens_2_values'([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45]).
:- assert_lpn_value_pred('MTeens_2', 'MTeens_2_values').

:- dynamic 'MaxDecades_1_values'/1.
values('MaxDecades_1', Vs,a@uniform) :- 'MaxDecades_1_values'(Vs).
'MaxDecades_1_values'([1]).
:- assert_lpn_value_pred('MaxDecades_1', 'MaxDecades_1_values').

:- dynamic 'MaxForBase_2_values'/1.
values('MaxForBase_2', Vs,a@uniform) :- 'MaxForBase_2_values'(Vs).
'MaxForBase_2_values'([1,2]).
:- assert_lpn_value_pred('MaxForBase_2', 'MaxForBase_2_values').

:- dynamic 'MaxOnes_1_values'/1.
values('MaxOnes_1', Vs,a@uniform) :- 'MaxOnes_1_values'(Vs).
'MaxOnes_1_values'([1]).
:- assert_lpn_value_pred('MaxOnes_1', 'MaxOnes_1_values').

:- dynamic 'MaxPrefix_2_values'/1.
values('MaxPrefix_2', Vs,a@uniform) :- 'MaxPrefix_2_values'(Vs).
'MaxPrefix_2_values'([1,2,3]).
:- assert_lpn_value_pred('MaxPrefix_2', 'MaxPrefix_2_values').

:- dynamic 'More_2_values'/1.
values('More_2', Vs,a@uniform) :- 'More_2_values'(Vs).
'More_2_values'([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]).
:- assert_lpn_value_pred('More_2', 'More_2_values').

:- dynamic 'NormalPrefix_1_values'/1.
values('NormalPrefix_1', Vs,a@uniform) :- 'NormalPrefix_1_values'(Vs).
'NormalPrefix_1_values'([1]).
:- assert_lpn_value_pred('NormalPrefix_1', 'NormalPrefix_1_values').

:- dynamic 'Number_1_values'/1.
values('Number_1', Vs,a@uniform) :- 'Number_1_values'(Vs).
'Number_1_values'([1,2]).
:- assert_lpn_value_pred('Number_1', 'Number_1_values').

:- dynamic 'NumberOfBase_2_values'/1.
values('NumberOfBase_2', Vs,a@uniform) :- 'NumberOfBase_2_values'(Vs).
'NumberOfBase_2_values'([1,2]).
:- assert_lpn_value_pred('NumberOfBase_2', 'NumberOfBase_2_values').

:- dynamic 'Ones_1_values'/1.
values('Ones_1', Vs,a@uniform) :- 'Ones_1_values'(Vs).
'Ones_1_values'([1,2,3,4,5,6,7,8,9]).
:- assert_lpn_value_pred('Ones_1', 'Ones_1_values').

:- dynamic 'Pred_2_values'/1.
values('Pred_2', Vs,a@uniform) :- 'Pred_2_values'(Vs).
'Pred_2_values'([1]).
:- assert_lpn_value_pred('Pred_2', 'Pred_2_values').

:- dynamic 'Prefix_2_values'/1.
values('Prefix_2', Vs,a@uniform) :- 'Prefix_2_values'(Vs).
'Prefix_2_values'([1,2,3,4,5,6]).
:- assert_lpn_value_pred('Prefix_2', 'Prefix_2_values').

:- dynamic 'PrevBase_2_values'/1.
values('PrevBase_2', Vs,a@uniform) :- 'PrevBase_2_values'(Vs).
'PrevBase_2_values'([1,2,3]).
:- assert_lpn_value_pred('PrevBase_2', 'PrevBase_2_values').

:- dynamic 'SDecades_2_values'/1.
values('SDecades_2', Vs,a@uniform) :- 'SDecades_2_values'(Vs).
'SDecades_2_values'([1,2,3,4,5,6,7]).
:- assert_lpn_value_pred('SDecades_2', 'SDecades_2_values').

:- dynamic 'SOnes_2_values'/1.
values('SOnes_2', Vs,a@uniform) :- 'SOnes_2_values'(Vs).
'SOnes_2_values'([1,2,3,4,5,6,7,8]).
:- assert_lpn_value_pred('SOnes_2', 'SOnes_2_values').

:- dynamic 'STeens_2_values'/1.
values('STeens_2', Vs,a@uniform) :- 'STeens_2_values'(Vs).
'STeens_2_values'([1,2,3,4,5,6,7,8,9]).
:- assert_lpn_value_pred('STeens_2', 'STeens_2_values').

:- dynamic 'Succ_2_values'/1.
values('Succ_2', Vs,a@uniform) :- 'Succ_2_values'(Vs).
'Succ_2_values'([1,2,3,4,5,6,7,8,9,10,11]).
:- assert_lpn_value_pred('Succ_2', 'Succ_2_values').

:- dynamic 'Suffix_2_values'/1.
values('Suffix_2', Vs,a@uniform) :- 'Suffix_2_values'(Vs).
'Suffix_2_values'([1,2]).
:- assert_lpn_value_pred('Suffix_2', 'Suffix_2_values').

:- dynamic 'Teens_1_values'/1.
values('Teens_1', Vs,a@uniform) :- 'Teens_1_values'(Vs).
'Teens_1_values'([1,2,3,4,5,6,7,8,9,10]).
:- assert_lpn_value_pred('Teens_1', 'Teens_1_values').



rule('Decades_1'-[[twenty]], 1).
rule('Decades_1'-[[thirty]], 2).
rule('Decades_1'-[[forty]], 3).
rule('Decades_1'-[[fifty]], 4).
rule('Decades_1'-[[sixty]], 5).
rule('Decades_1'-[[seventy]], 6).
rule('Decades_1'-[[eighty]], 7).
rule('Decades_1'-[[ninety]], 8).

rule('Equal_2'-[X, X], 1) :- 
		prove('Number_1'-[X]).

rule('LargerBase_2'-[X, Z], 1) :- 
		prove('LargerBase_2'-[X, Y]), prove('LargerBase_2'-[Y, Z]).
rule('LargerBase_2'-[X, Y], 2) :- 
		prove('PrevBase_2'-[X, Y]).

rule('Less_2'-[X, Y], 1) :- 
		prove('More_2'-[Y, X]).

rule('MDecades_2'-[[thirty], [twenty]], 1).
rule('MDecades_2'-[[forty], [twenty]], 2).
rule('MDecades_2'-[[forty], [thirty]], 3).
rule('MDecades_2'-[[fifty], [twenty]], 4).
rule('MDecades_2'-[[fifty], [thirty]], 5).
rule('MDecades_2'-[[fifty], [forty]], 6).
rule('MDecades_2'-[[sixty], [twenty]], 7).
rule('MDecades_2'-[[sixty], [thirty]], 8).
rule('MDecades_2'-[[sixty], [forty]], 9).
rule('MDecades_2'-[[sixty], [fifty]], 10).
rule('MDecades_2'-[[seventy], [twenty]], 11).
rule('MDecades_2'-[[seventy], [thirty]], 12).
rule('MDecades_2'-[[seventy], [forty]], 13).
rule('MDecades_2'-[[seventy], [fifty]], 14).
rule('MDecades_2'-[[seventy], [sixty]], 15).
rule('MDecades_2'-[[eighty], [twenty]], 16).
rule('MDecades_2'-[[eighty], [thirty]], 17).
rule('MDecades_2'-[[eighty], [forty]], 18).
rule('MDecades_2'-[[eighty], [fifty]], 19).
rule('MDecades_2'-[[eighty], [sixty]], 20).
rule('MDecades_2'-[[eighty], [seventy]], 21).
rule('MDecades_2'-[[ninety], [twenty]], 22).
rule('MDecades_2'-[[ninety], [thirty]], 23).
rule('MDecades_2'-[[ninety], [forty]], 24).
rule('MDecades_2'-[[ninety], [fifty]], 25).
rule('MDecades_2'-[[ninety], [sixty]], 26).
rule('MDecades_2'-[[ninety], [seventy]], 27).
rule('MDecades_2'-[[ninety], [eighty]], 28).

rule('MOnes_2'-[[two], [one]], 1).
rule('MOnes_2'-[[three], [one]], 2).
rule('MOnes_2'-[[three], [two]], 3).
rule('MOnes_2'-[[four], [one]], 4).
rule('MOnes_2'-[[four], [two]], 5).
rule('MOnes_2'-[[four], [three]], 6).
rule('MOnes_2'-[[five], [one]], 7).
rule('MOnes_2'-[[five], [two]], 8).
rule('MOnes_2'-[[five], [three]], 9).
rule('MOnes_2'-[[five], [four]], 10).
rule('MOnes_2'-[[six], [one]], 11).
rule('MOnes_2'-[[six], [two]], 12).
rule('MOnes_2'-[[six], [three]], 13).
rule('MOnes_2'-[[six], [four]], 14).
rule('MOnes_2'-[[six], [five]], 15).
rule('MOnes_2'-[[seven], [one]], 16).
rule('MOnes_2'-[[seven], [two]], 17).
rule('MOnes_2'-[[seven], [three]], 18).
rule('MOnes_2'-[[seven], [four]], 19).
rule('MOnes_2'-[[seven], [five]], 20).
rule('MOnes_2'-[[seven], [six]], 21).
rule('MOnes_2'-[[eight], [one]], 22).
rule('MOnes_2'-[[eight], [two]], 23).
rule('MOnes_2'-[[eight], [three]], 24).
rule('MOnes_2'-[[eight], [four]], 25).
rule('MOnes_2'-[[eight], [five]], 26).
rule('MOnes_2'-[[eight], [six]], 27).
rule('MOnes_2'-[[eight], [seven]], 28).
rule('MOnes_2'-[[nine], [one]], 29).
rule('MOnes_2'-[[nine], [two]], 30).
rule('MOnes_2'-[[nine], [three]], 31).
rule('MOnes_2'-[[nine], [four]], 32).
rule('MOnes_2'-[[nine], [five]], 33).
rule('MOnes_2'-[[nine], [six]], 34).
rule('MOnes_2'-[[nine], [seven]], 35).
rule('MOnes_2'-[[nine], [eight]], 36).

rule('MTeens_2'-[[eleven], [ten]], 1).
rule('MTeens_2'-[[twelve], [ten]], 2).
rule('MTeens_2'-[[twelve], [eleven]], 3).
rule('MTeens_2'-[[thirteen], [ten]], 4).
rule('MTeens_2'-[[thirteen], [eleven]], 5).
rule('MTeens_2'-[[thirteen], [twelve]], 6).
rule('MTeens_2'-[[fourteen], [ten]], 7).
rule('MTeens_2'-[[fourteen], [eleven]], 8).
rule('MTeens_2'-[[fourteen], [twelve]], 9).
rule('MTeens_2'-[[fourteen], [thirteen]], 10).
rule('MTeens_2'-[[fifteen], [ten]], 11).
rule('MTeens_2'-[[fifteen], [eleven]], 12).
rule('MTeens_2'-[[fifteen], [twelve]], 13).
rule('MTeens_2'-[[fifteen], [thirteen]], 14).
rule('MTeens_2'-[[fifteen], [fourteen]], 15).
rule('MTeens_2'-[[sixteen], [ten]], 16).
rule('MTeens_2'-[[sixteen], [eleven]], 17).
rule('MTeens_2'-[[sixteen], [twelve]], 18).
rule('MTeens_2'-[[sixteen], [thirteen]], 19).
rule('MTeens_2'-[[sixteen], [fourteen]], 20).
rule('MTeens_2'-[[sixteen], [fifteen]], 21).
rule('MTeens_2'-[[seventeen], [ten]], 22).
rule('MTeens_2'-[[seventeen], [eleven]], 23).
rule('MTeens_2'-[[seventeen], [twelve]], 24).
rule('MTeens_2'-[[seventeen], [thirteen]], 25).
rule('MTeens_2'-[[seventeen], [fourteen]], 26).
rule('MTeens_2'-[[seventeen], [fifteen]], 27).
rule('MTeens_2'-[[seventeen], [sixteen]], 28).
rule('MTeens_2'-[[eighteen], [ten]], 29).
rule('MTeens_2'-[[eighteen], [eleven]], 30).
rule('MTeens_2'-[[eighteen], [twelve]], 31).
rule('MTeens_2'-[[eighteen], [thirteen]], 32).
rule('MTeens_2'-[[eighteen], [fourteen]], 33).
rule('MTeens_2'-[[eighteen], [fifteen]], 34).
rule('MTeens_2'-[[eighteen], [sixteen]], 35).
rule('MTeens_2'-[[eighteen], [seventeen]], 36).
rule('MTeens_2'-[[nineteen], [ten]], 37).
rule('MTeens_2'-[[nineteen], [eleven]], 38).
rule('MTeens_2'-[[nineteen], [twelve]], 39).
rule('MTeens_2'-[[nineteen], [thirteen]], 40).
rule('MTeens_2'-[[nineteen], [fourteen]], 41).
rule('MTeens_2'-[[nineteen], [fifteen]], 42).
rule('MTeens_2'-[[nineteen], [sixteen]], 43).
rule('MTeens_2'-[[nineteen], [seventeen]], 44).
rule('MTeens_2'-[[nineteen], [eighteen]], 45).

rule('MaxDecades_1'-[[ninety]], 1).

rule('MaxForBase_2'-[Z_1, B], 1) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)),
		prove('MaxPrefix_2'-[P, B]), prove('PrevBase_2'-[B, C]), prove('MaxForBase_2'-[S, C]),
		(var(Z_1) -> append(P, B, S, Z_1); true).
rule('MaxForBase_2'-[P, []], 2) :- 
		prove('MaxPrefix_2'-[P, []]).

rule('MaxOnes_1'-[[nine]], 1).

rule('MaxPrefix_2'-[W, U], 1) :- 
		prove('LargerBase_2'-[U, [hundred]]), prove('MaxForBase_2'-[W, [hundred]]).
rule('MaxPrefix_2'-[O, [hundred]], 2) :- 
		prove('MaxOnes_1'-[O]).
rule('MaxPrefix_2'-[Z_1, []], 3) :- 
		(var(Z_1) -> true; append(D, O, Z_1)),
		prove('MaxDecades_1'-[D]), prove('MaxOnes_1'-[O]),
		(var(Z_1) -> append(D, O, Z_1); true).

rule('More_2'-[X, Y], 1) :- 
		prove('MOnes_2'-[X, Y]).
rule('More_2'-[X, Y], 2) :- 
		prove('MTeens_2'-[X, Y]).
rule('More_2'-[X, Y], 3) :- 
		prove('MDecades_2'-[X, Y]).
rule('More_2'-[X, Y], 4) :- 
		prove('Teens_1'-[X]), prove('Ones_1'-[Y]).
rule('More_2'-[X, Y], 5) :- 
		prove('Decades_1'-[X]), prove('Ones_1'-[Y]).
rule('More_2'-[X, Y], 6) :- 
		prove('Decades_1'-[X]), prove('Teens_1'-[Y]).
rule('More_2'-[Z_1, U], 7) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)),
		prove('Decades_1'-[X]), prove('Ones_1'-[Y]), prove('Ones_1'-[U]),
		(var(Z_1) -> append(X, Y, Z_1); true).
rule('More_2'-[Z_1, U], 8) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)),
		prove('Decades_1'-[X]), prove('Ones_1'-[Y]), prove('Teens_1'-[U]),
		(var(Z_1) -> append(X, Y, Z_1); true).
rule('More_2'-[Z_1, X], 9) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)),
		prove('Decades_1'-[X]), prove('Ones_1'-[Y]),
		(var(Z_1) -> append(X, Y, Z_1); true).
rule('More_2'-[Z_1, Z_2], 10) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)), (var(Z_2) -> true; append(X, U, Z_2)),
		prove('Decades_1'-[X]), prove('MOnes_2'-[Y, U]),
		(var(Z_1) -> append(X, Y, Z_1); true), (var(Z_2) -> append(X, U, Z_2); true).
rule('More_2'-[Z_1, U], 11) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)),
		prove('MDecades_2'-[X, U]), prove('Ones_1'-[Y]),
		(var(Z_1) -> append(X, Y, Z_1); true).
rule('More_2'-[X, Z_2], 12) :- 
		(var(Z_2) -> true; append(U, Y, Z_2)),
		prove('MDecades_2'-[X, U]), prove('Ones_1'-[Y]),
		(var(Z_2) -> append(U, Y, Z_2); true).
rule('More_2'-[Z_1, Z_2], 13) :- 
		(var(Z_1) -> true; append(X, V, Z_1)), (var(Z_2) -> true; append(U, Y, Z_2)),
		prove('MDecades_2'-[X, U]), prove('Ones_1'-[V]), prove('Ones_1'-[Y]),
		(var(Z_1) -> append(X, V, Z_1); true), (var(Z_2) -> append(U, Y, Z_2); true).
rule('More_2'-[X, Y], 14) :- 
		prove('LargerBase_2'-[B, C]), prove('NumberOfBase_2'-[X, B]), prove('NumberOfBase_2'-[Y, C]).
rule('More_2'-[Z_1, Z_2], 15) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)), (var(Z_2) -> true; append(Q, B, T, Z_2)),
		prove('LargerBase_2'-[B, []]), prove('Prefix_2'-[P, B]), prove('Prefix_2'-[Q, B]), prove('More_2'-[P, Q]), prove('Suffix_2'-[B, S]), prove('Suffix_2'-[B, T]),
		(var(Z_1) -> append(P, B, S, Z_1); true), (var(Z_2) -> append(Q, B, T, Z_2); true).
rule('More_2'-[Z_1, Z_2], 16) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)), (var(Z_2) -> true; append(P, B, T, Z_2)),
		prove('LargerBase_2'-[B, []]), prove('Prefix_2'-[P, B]), prove('Suffix_2'-[B, S]), prove('Suffix_2'-[B, T]), prove('More_2'-[S, T]),
		(var(Z_1) -> append(P, B, S, Z_1); true), (var(Z_2) -> append(P, B, T, Z_2); true).
rule('More_2'-[Z_1, Z_2], 17) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)), (var(Z_2) -> true; append(P, B, Z_2)),
		prove('Prefix_2'-[P, B]), prove('Suffix_2'-[B, S]),
		(var(Z_1) -> append(P, B, S, Z_1); true), (var(Z_2) -> append(P, B, Z_2); true).

rule('NormalPrefix_1'-[S], 1) :- 
		prove('Suffix_2'-[[thousand], S]).

rule('Number_1'-[Z_1], 1) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)),
		prove('Prefix_2'-[P, B]), prove('Suffix_2'-[B, S]),
		(var(Z_1) -> append(P, B, S, Z_1); true).
rule('Number_1'-[Z_1], 2) :- 
		(var(Z_1) -> true; append(P, B, Z_1)),
		prove('Prefix_2'-[P, B]),
		(var(Z_1) -> append(P, B, Z_1); true).

rule('NumberOfBase_2'-[Z_1, C], 1) :- 
		(var(Z_1) -> true; append(P, C, S, Z_1)),
		prove('Prefix_2'-[P, C]), prove('Suffix_2'-[C, S]),
		(var(Z_1) -> append(P, C, S, Z_1); true).
rule('NumberOfBase_2'-[Z_1, C], 2) :- 
		(var(Z_1) -> true; append(P, C, Z_1)),
		prove('Prefix_2'-[P, C]),
		(var(Z_1) -> append(P, C, Z_1); true).

rule('Ones_1'-[[one]], 1).
rule('Ones_1'-[[two]], 2).
rule('Ones_1'-[[three]], 3).
rule('Ones_1'-[[four]], 4).
rule('Ones_1'-[[five]], 5).
rule('Ones_1'-[[six]], 6).
rule('Ones_1'-[[seven]], 7).
rule('Ones_1'-[[eight]], 8).
rule('Ones_1'-[[nine]], 9).

rule('Pred_2'-[X, Y], 1) :- 
		prove('Succ_2'-[Y, X]).

rule('Prefix_2'-[P, B], 1) :- 
		prove('LargerBase_2'-[B, [hundred]]), prove('NormalPrefix_1'-[P]).
rule('Prefix_2'-[P, [hundred]], 2) :- 
		prove('Ones_1'-[P]).
rule('Prefix_2'-[P, []], 3) :- 
		prove('Ones_1'-[P]).
rule('Prefix_2'-[P, []], 4) :- 
		prove('Teens_1'-[P]).
rule('Prefix_2'-[P, []], 5) :- 
		prove('Decades_1'-[P]).
rule('Prefix_2'-[Z_1, []], 6) :- 
		(var(Z_1) -> true; append(P, Q, Z_1)),
		prove('Decades_1'-[P]), prove('Ones_1'-[Q]),
		(var(Z_1) -> append(P, Q, Z_1); true).

rule('PrevBase_2'-[[million], [thousand]], 1).
rule('PrevBase_2'-[[thousand], [hundred]], 2).
rule('PrevBase_2'-[[hundred], []], 3).

rule('SDecades_2'-[[twenty], [thirty]], 1).
rule('SDecades_2'-[[thirty], [forty]], 2).
rule('SDecades_2'-[[forty], [fifty]], 3).
rule('SDecades_2'-[[fifty], [sixty]], 4).
rule('SDecades_2'-[[sixty], [seventy]], 5).
rule('SDecades_2'-[[seventy], [eighty]], 6).
rule('SDecades_2'-[[eighty], [ninety]], 7).

rule('SOnes_2'-[[one], [two]], 1).
rule('SOnes_2'-[[two], [three]], 2).
rule('SOnes_2'-[[three], [four]], 3).
rule('SOnes_2'-[[four], [five]], 4).
rule('SOnes_2'-[[five], [six]], 5).
rule('SOnes_2'-[[six], [seven]], 6).
rule('SOnes_2'-[[seven], [eight]], 7).
rule('SOnes_2'-[[eight], [nine]], 8).

rule('STeens_2'-[[ten], [eleven]], 1).
rule('STeens_2'-[[eleven], [twelve]], 2).
rule('STeens_2'-[[twelve], [thirteen]], 3).
rule('STeens_2'-[[thirteen], [fourteen]], 4).
rule('STeens_2'-[[fourteen], [fifteen]], 5).
rule('STeens_2'-[[fifteen], [sixteen]], 6).
rule('STeens_2'-[[sixteen], [seventeen]], 7).
rule('STeens_2'-[[seventeen], [eighteen]], 8).
rule('STeens_2'-[[eighteen], [nineteen]], 9).

rule('Succ_2'-[X, Y], 1) :- 
		prove('SOnes_2'-[X, Y]).
rule('Succ_2'-[[nine], [ten]], 2).
rule('Succ_2'-[X, Y], 3) :- 
		prove('STeens_2'-[X, Y]).
rule('Succ_2'-[[nineteen], [twenty]], 4).
rule('Succ_2'-[X, Z_2], 5) :- 
		(var(Z_2) -> true; append(X, [one], Z_2)),
		prove('Decades_1'-[X]),
		(var(Z_2) -> append(X, [one], Z_2); true).
rule('Succ_2'-[Z_1, Z_2], 6) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)), (var(Z_2) -> true; append(X, V, Z_2)),
		prove('Decades_1'-[X]), prove('SOnes_2'-[Y, V]),
		(var(Z_1) -> append(X, Y, Z_1); true), (var(Z_2) -> append(X, V, Z_2); true).
rule('Succ_2'-[Z_1, U], 7) :- 
		(var(Z_1) -> true; append(X, Y, Z_1)),
		prove('SDecades_2'-[X, U]), prove('MaxOnes_1'-[Y]),
		(var(Z_1) -> append(X, Y, Z_1); true).
rule('Succ_2'-[X, Z_2], 8) :- 
		(var(Z_2) -> true; append([one], C, Z_2)),
		prove('MaxForBase_2'-[X, B]), prove('PrevBase_2'-[C, B]),
		(var(Z_2) -> append([one], C, Z_2); true).
rule('Succ_2'-[Z_1, Z_2], 9) :- 
		(var(Z_1) -> true; append(P, B, Z_1)), (var(Z_2) -> true; append(P, B, [one], Z_2)),
		prove('Prefix_2'-[P, B]), prove('LargerBase_2'-[B, []]),
		(var(Z_1) -> append(P, B, Z_1); true), (var(Z_2) -> append(P, B, [one], Z_2); true).
rule('Succ_2'-[Z_1, Z_2], 10) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)), (var(Z_2) -> true; append(P, B, T, Z_2)),
		prove('Prefix_2'-[P, B]), prove('Succ_2'-[S, T]), prove('Suffix_2'-[B, T]),
		(var(Z_1) -> append(P, B, S, Z_1); true), (var(Z_2) -> append(P, B, T, Z_2); true).
rule('Succ_2'-[Z_1, Z_2], 11) :- 
		(var(Z_1) -> true; append(P, B, S, Z_1)), (var(Z_2) -> true; append(Q, B, Z_2)),
		prove('PrevBase_2'-[B, C]), prove('MaxForBase_2'-[S, C]), prove('Succ_2'-[P, Q]), prove('Prefix_2'-[Q, B]),
		(var(Z_1) -> append(P, B, S, Z_1); true), (var(Z_2) -> append(Q, B, Z_2); true).

rule('Suffix_2'-[B, S], 1) :- 
		prove('LargerBase_2'-[B, C]), prove('NumberOfBase_2'-[S, C]).
rule('Suffix_2'-[[], []], 2).

rule('Teens_1'-[[ten]], 1).
rule('Teens_1'-[[eleven]], 2).
rule('Teens_1'-[[twelve]], 3).
rule('Teens_1'-[[thirteen]], 4).
rule('Teens_1'-[[fourteen]], 5).
rule('Teens_1'-[[fifteen]], 6).
rule('Teens_1'-[[sixteen]], 7).
rule('Teens_1'-[[seventeen]], 8).
rule('Teens_1'-[[eighteen]], 9).
rule('Teens_1'-[[nineteen]], 10).



prismToLPN('Decades_1', 1, 'Decades(twenty)').
prismToLPN('Decades_1', 2, 'Decades(thirty)').
prismToLPN('Decades_1', 3, 'Decades(forty)').
prismToLPN('Decades_1', 4, 'Decades(fifty)').
prismToLPN('Decades_1', 5, 'Decades(sixty)').
prismToLPN('Decades_1', 6, 'Decades(seventy)').
prismToLPN('Decades_1', 7, 'Decades(eighty)').
prismToLPN('Decades_1', 8, 'Decades(ninety)').

prismToLPN('Equal_2', 1, 'Equal(X, X) <-- Number(X)').

prismToLPN('LargerBase_2', 1, 'LargerBase(X, Z) <-- LargerBase(X, Y), LargerBase(Y, Z)').
prismToLPN('LargerBase_2', 2, 'LargerBase(X, Y) <-- PrevBase(X, Y)').

prismToLPN('Less_2', 1, 'Less(X, Y) <-- More(Y, X)').

prismToLPN('MDecades_2', 1, 'MDecades(thirty, twenty)').
prismToLPN('MDecades_2', 2, 'MDecades(forty, twenty)').
prismToLPN('MDecades_2', 3, 'MDecades(forty, thirty)').
prismToLPN('MDecades_2', 4, 'MDecades(fifty, twenty)').
prismToLPN('MDecades_2', 5, 'MDecades(fifty, thirty)').
prismToLPN('MDecades_2', 6, 'MDecades(fifty, forty)').
prismToLPN('MDecades_2', 7, 'MDecades(sixty, twenty)').
prismToLPN('MDecades_2', 8, 'MDecades(sixty, thirty)').
prismToLPN('MDecades_2', 9, 'MDecades(sixty, forty)').
prismToLPN('MDecades_2', 10, 'MDecades(sixty, fifty)').
prismToLPN('MDecades_2', 11, 'MDecades(seventy, twenty)').
prismToLPN('MDecades_2', 12, 'MDecades(seventy, thirty)').
prismToLPN('MDecades_2', 13, 'MDecades(seventy, forty)').
prismToLPN('MDecades_2', 14, 'MDecades(seventy, fifty)').
prismToLPN('MDecades_2', 15, 'MDecades(seventy, sixty)').
prismToLPN('MDecades_2', 16, 'MDecades(eighty, twenty)').
prismToLPN('MDecades_2', 17, 'MDecades(eighty, thirty)').
prismToLPN('MDecades_2', 18, 'MDecades(eighty, forty)').
prismToLPN('MDecades_2', 19, 'MDecades(eighty, fifty)').
prismToLPN('MDecades_2', 20, 'MDecades(eighty, sixty)').
prismToLPN('MDecades_2', 21, 'MDecades(eighty, seventy)').
prismToLPN('MDecades_2', 22, 'MDecades(ninety, twenty)').
prismToLPN('MDecades_2', 23, 'MDecades(ninety, thirty)').
prismToLPN('MDecades_2', 24, 'MDecades(ninety, forty)').
prismToLPN('MDecades_2', 25, 'MDecades(ninety, fifty)').
prismToLPN('MDecades_2', 26, 'MDecades(ninety, sixty)').
prismToLPN('MDecades_2', 27, 'MDecades(ninety, seventy)').
prismToLPN('MDecades_2', 28, 'MDecades(ninety, eighty)').

prismToLPN('MOnes_2', 1, 'MOnes(two, one)').
prismToLPN('MOnes_2', 2, 'MOnes(three, one)').
prismToLPN('MOnes_2', 3, 'MOnes(three, two)').
prismToLPN('MOnes_2', 4, 'MOnes(four, one)').
prismToLPN('MOnes_2', 5, 'MOnes(four, two)').
prismToLPN('MOnes_2', 6, 'MOnes(four, three)').
prismToLPN('MOnes_2', 7, 'MOnes(five, one)').
prismToLPN('MOnes_2', 8, 'MOnes(five, two)').
prismToLPN('MOnes_2', 9, 'MOnes(five, three)').
prismToLPN('MOnes_2', 10, 'MOnes(five, four)').
prismToLPN('MOnes_2', 11, 'MOnes(six, one)').
prismToLPN('MOnes_2', 12, 'MOnes(six, two)').
prismToLPN('MOnes_2', 13, 'MOnes(six, three)').
prismToLPN('MOnes_2', 14, 'MOnes(six, four)').
prismToLPN('MOnes_2', 15, 'MOnes(six, five)').
prismToLPN('MOnes_2', 16, 'MOnes(seven, one)').
prismToLPN('MOnes_2', 17, 'MOnes(seven, two)').
prismToLPN('MOnes_2', 18, 'MOnes(seven, three)').
prismToLPN('MOnes_2', 19, 'MOnes(seven, four)').
prismToLPN('MOnes_2', 20, 'MOnes(seven, five)').
prismToLPN('MOnes_2', 21, 'MOnes(seven, six)').
prismToLPN('MOnes_2', 22, 'MOnes(eight, one)').
prismToLPN('MOnes_2', 23, 'MOnes(eight, two)').
prismToLPN('MOnes_2', 24, 'MOnes(eight, three)').
prismToLPN('MOnes_2', 25, 'MOnes(eight, four)').
prismToLPN('MOnes_2', 26, 'MOnes(eight, five)').
prismToLPN('MOnes_2', 27, 'MOnes(eight, six)').
prismToLPN('MOnes_2', 28, 'MOnes(eight, seven)').
prismToLPN('MOnes_2', 29, 'MOnes(nine, one)').
prismToLPN('MOnes_2', 30, 'MOnes(nine, two)').
prismToLPN('MOnes_2', 31, 'MOnes(nine, three)').
prismToLPN('MOnes_2', 32, 'MOnes(nine, four)').
prismToLPN('MOnes_2', 33, 'MOnes(nine, five)').
prismToLPN('MOnes_2', 34, 'MOnes(nine, six)').
prismToLPN('MOnes_2', 35, 'MOnes(nine, seven)').
prismToLPN('MOnes_2', 36, 'MOnes(nine, eight)').

prismToLPN('MTeens_2', 1, 'MTeens(eleven, ten)').
prismToLPN('MTeens_2', 2, 'MTeens(twelve, ten)').
prismToLPN('MTeens_2', 3, 'MTeens(twelve, eleven)').
prismToLPN('MTeens_2', 4, 'MTeens(thirteen, ten)').
prismToLPN('MTeens_2', 5, 'MTeens(thirteen, eleven)').
prismToLPN('MTeens_2', 6, 'MTeens(thirteen, twelve)').
prismToLPN('MTeens_2', 7, 'MTeens(fourteen, ten)').
prismToLPN('MTeens_2', 8, 'MTeens(fourteen, eleven)').
prismToLPN('MTeens_2', 9, 'MTeens(fourteen, twelve)').
prismToLPN('MTeens_2', 10, 'MTeens(fourteen, thirteen)').
prismToLPN('MTeens_2', 11, 'MTeens(fifteen, ten)').
prismToLPN('MTeens_2', 12, 'MTeens(fifteen, eleven)').
prismToLPN('MTeens_2', 13, 'MTeens(fifteen, twelve)').
prismToLPN('MTeens_2', 14, 'MTeens(fifteen, thirteen)').
prismToLPN('MTeens_2', 15, 'MTeens(fifteen, fourteen)').
prismToLPN('MTeens_2', 16, 'MTeens(sixteen, ten)').
prismToLPN('MTeens_2', 17, 'MTeens(sixteen, eleven)').
prismToLPN('MTeens_2', 18, 'MTeens(sixteen, twelve)').
prismToLPN('MTeens_2', 19, 'MTeens(sixteen, thirteen)').
prismToLPN('MTeens_2', 20, 'MTeens(sixteen, fourteen)').
prismToLPN('MTeens_2', 21, 'MTeens(sixteen, fifteen)').
prismToLPN('MTeens_2', 22, 'MTeens(seventeen, ten)').
prismToLPN('MTeens_2', 23, 'MTeens(seventeen, eleven)').
prismToLPN('MTeens_2', 24, 'MTeens(seventeen, twelve)').
prismToLPN('MTeens_2', 25, 'MTeens(seventeen, thirteen)').
prismToLPN('MTeens_2', 26, 'MTeens(seventeen, fourteen)').
prismToLPN('MTeens_2', 27, 'MTeens(seventeen, fifteen)').
prismToLPN('MTeens_2', 28, 'MTeens(seventeen, sixteen)').
prismToLPN('MTeens_2', 29, 'MTeens(eighteen, ten)').
prismToLPN('MTeens_2', 30, 'MTeens(eighteen, eleven)').
prismToLPN('MTeens_2', 31, 'MTeens(eighteen, twelve)').
prismToLPN('MTeens_2', 32, 'MTeens(eighteen, thirteen)').
prismToLPN('MTeens_2', 33, 'MTeens(eighteen, fourteen)').
prismToLPN('MTeens_2', 34, 'MTeens(eighteen, fifteen)').
prismToLPN('MTeens_2', 35, 'MTeens(eighteen, sixteen)').
prismToLPN('MTeens_2', 36, 'MTeens(eighteen, seventeen)').
prismToLPN('MTeens_2', 37, 'MTeens(nineteen, ten)').
prismToLPN('MTeens_2', 38, 'MTeens(nineteen, eleven)').
prismToLPN('MTeens_2', 39, 'MTeens(nineteen, twelve)').
prismToLPN('MTeens_2', 40, 'MTeens(nineteen, thirteen)').
prismToLPN('MTeens_2', 41, 'MTeens(nineteen, fourteen)').
prismToLPN('MTeens_2', 42, 'MTeens(nineteen, fifteen)').
prismToLPN('MTeens_2', 43, 'MTeens(nineteen, sixteen)').
prismToLPN('MTeens_2', 44, 'MTeens(nineteen, seventeen)').
prismToLPN('MTeens_2', 45, 'MTeens(nineteen, eighteen)').

prismToLPN('MaxDecades_1', 1, 'MaxDecades(ninety)').

prismToLPN('MaxForBase_2', 1, 'MaxForBase(P B S, B) <-- MaxPrefix(P, B), PrevBase(B, C), MaxForBase(S, C)').
prismToLPN('MaxForBase_2', 2, 'MaxForBase(P, null) <-- MaxPrefix(P, null)').

prismToLPN('MaxOnes_1', 1, 'MaxOnes(nine)').

prismToLPN('MaxPrefix_2', 1, 'MaxPrefix(W, U) <-- LargerBase(U, hundred), MaxForBase(W, hundred)').
prismToLPN('MaxPrefix_2', 2, 'MaxPrefix(O, hundred) <-- MaxOnes(O)').
prismToLPN('MaxPrefix_2', 3, 'MaxPrefix(D O, null) <-- MaxDecades(D), MaxOnes(O)').

prismToLPN('More_2', 1, 'More(X, Y) <-- MOnes(X, Y)').
prismToLPN('More_2', 2, 'More(X, Y) <-- MTeens(X, Y)').
prismToLPN('More_2', 3, 'More(X, Y) <-- MDecades(X, Y)').
prismToLPN('More_2', 4, 'More(X, Y) <-- Teens(X), Ones(Y)').
prismToLPN('More_2', 5, 'More(X, Y) <-- Decades(X), Ones(Y)').
prismToLPN('More_2', 6, 'More(X, Y) <-- Decades(X), Teens(Y)').
prismToLPN('More_2', 7, 'More(X Y, U) <-- Decades(X), Ones(Y), Ones(U)').
prismToLPN('More_2', 8, 'More(X Y, U) <-- Decades(X), Ones(Y), Teens(U)').
prismToLPN('More_2', 9, 'More(X Y, X) <-- Decades(X), Ones(Y)').
prismToLPN('More_2', 10, 'More(X Y, X U) <-- Decades(X), MOnes(Y, U)').
prismToLPN('More_2', 11, 'More(X Y, U) <-- MDecades(X, U), Ones(Y)').
prismToLPN('More_2', 12, 'More(X, U Y) <-- MDecades(X, U), Ones(Y)').
prismToLPN('More_2', 13, 'More(X V, U Y) <-- MDecades(X, U), Ones(V), Ones(Y)').
prismToLPN('More_2', 14, 'More(X, Y) <-- LargerBase(B, C), NumberOfBase(X, B), NumberOfBase(Y, C)').
prismToLPN('More_2', 15, 'More(P B S, Q B T) <-- LargerBase(B, null), Prefix(P, B), Prefix(Q, B), More(P, Q), Suffix(B, S), Suffix(B, T)').
prismToLPN('More_2', 16, 'More(P B S, P B T) <-- LargerBase(B, null), Prefix(P, B), Suffix(B, S), Suffix(B, T), More(S, T)').
prismToLPN('More_2', 17, 'More(P B S, P B) <-- Prefix(P, B), Suffix(B, S)').

prismToLPN('NormalPrefix_1', 1, 'NormalPrefix(S) <-- Suffix(thousand, S)').

prismToLPN('Number_1', 1, 'Number(P B S) <-- Prefix(P, B), Suffix(B, S)').
prismToLPN('Number_1', 2, 'Number(P B) <-- Prefix(P, B)').

prismToLPN('NumberOfBase_2', 1, 'NumberOfBase(P C S, C) <-- Prefix(P, C), Suffix(C, S)').
prismToLPN('NumberOfBase_2', 2, 'NumberOfBase(P C, C) <-- Prefix(P, C)').

prismToLPN('Ones_1', 1, 'Ones(one)').
prismToLPN('Ones_1', 2, 'Ones(two)').
prismToLPN('Ones_1', 3, 'Ones(three)').
prismToLPN('Ones_1', 4, 'Ones(four)').
prismToLPN('Ones_1', 5, 'Ones(five)').
prismToLPN('Ones_1', 6, 'Ones(six)').
prismToLPN('Ones_1', 7, 'Ones(seven)').
prismToLPN('Ones_1', 8, 'Ones(eight)').
prismToLPN('Ones_1', 9, 'Ones(nine)').

prismToLPN('Pred_2', 1, 'Pred(X, Y) <-- Succ(Y, X)').

prismToLPN('Prefix_2', 1, 'Prefix(P, B) <-- LargerBase(B, hundred), NormalPrefix(P)').
prismToLPN('Prefix_2', 2, 'Prefix(P, hundred) <-- Ones(P)').
prismToLPN('Prefix_2', 3, 'Prefix(P, null) <-- Ones(P)').
prismToLPN('Prefix_2', 4, 'Prefix(P, null) <-- Teens(P)').
prismToLPN('Prefix_2', 5, 'Prefix(P, null) <-- Decades(P)').
prismToLPN('Prefix_2', 6, 'Prefix(P Q, null) <-- Decades(P), Ones(Q)').

prismToLPN('PrevBase_2', 1, 'PrevBase(million, thousand)').
prismToLPN('PrevBase_2', 2, 'PrevBase(thousand, hundred)').
prismToLPN('PrevBase_2', 3, 'PrevBase(hundred, null)').

prismToLPN('SDecades_2', 1, 'SDecades(twenty, thirty)').
prismToLPN('SDecades_2', 2, 'SDecades(thirty, forty)').
prismToLPN('SDecades_2', 3, 'SDecades(forty, fifty)').
prismToLPN('SDecades_2', 4, 'SDecades(fifty, sixty)').
prismToLPN('SDecades_2', 5, 'SDecades(sixty, seventy)').
prismToLPN('SDecades_2', 6, 'SDecades(seventy, eighty)').
prismToLPN('SDecades_2', 7, 'SDecades(eighty, ninety)').

prismToLPN('SOnes_2', 1, 'SOnes(one, two)').
prismToLPN('SOnes_2', 2, 'SOnes(two, three)').
prismToLPN('SOnes_2', 3, 'SOnes(three, four)').
prismToLPN('SOnes_2', 4, 'SOnes(four, five)').
prismToLPN('SOnes_2', 5, 'SOnes(five, six)').
prismToLPN('SOnes_2', 6, 'SOnes(six, seven)').
prismToLPN('SOnes_2', 7, 'SOnes(seven, eight)').
prismToLPN('SOnes_2', 8, 'SOnes(eight, nine)').

prismToLPN('STeens_2', 1, 'STeens(ten, eleven)').
prismToLPN('STeens_2', 2, 'STeens(eleven, twelve)').
prismToLPN('STeens_2', 3, 'STeens(twelve, thirteen)').
prismToLPN('STeens_2', 4, 'STeens(thirteen, fourteen)').
prismToLPN('STeens_2', 5, 'STeens(fourteen, fifteen)').
prismToLPN('STeens_2', 6, 'STeens(fifteen, sixteen)').
prismToLPN('STeens_2', 7, 'STeens(sixteen, seventeen)').
prismToLPN('STeens_2', 8, 'STeens(seventeen, eighteen)').
prismToLPN('STeens_2', 9, 'STeens(eighteen, nineteen)').

prismToLPN('Succ_2', 1, 'Succ(X, Y) <-- SOnes(X, Y)').
prismToLPN('Succ_2', 2, 'Succ(nine, ten)').
prismToLPN('Succ_2', 3, 'Succ(X, Y) <-- STeens(X, Y)').
prismToLPN('Succ_2', 4, 'Succ(nineteen, twenty)').
prismToLPN('Succ_2', 5, 'Succ(X, X one) <-- Decades(X)').
prismToLPN('Succ_2', 6, 'Succ(X Y, X V) <-- Decades(X), SOnes(Y, V)').
prismToLPN('Succ_2', 7, 'Succ(X Y, U) <-- SDecades(X, U), MaxOnes(Y)').
prismToLPN('Succ_2', 8, 'Succ(X, one C) <-- MaxForBase(X, B), PrevBase(C, B)').
prismToLPN('Succ_2', 9, 'Succ(P B, P B one) <-- Prefix(P, B), LargerBase(B, null)').
prismToLPN('Succ_2', 10, 'Succ(P B S, P B T) <-- Prefix(P, B), Succ(S, T), Suffix(B, T)').
prismToLPN('Succ_2', 11, 'Succ(P B S, Q B) <-- PrevBase(B, C), MaxForBase(S, C), Succ(P, Q), Prefix(Q, B)').

prismToLPN('Suffix_2', 1, 'Suffix(B, S) <-- LargerBase(B, C), NumberOfBase(S, C)').
prismToLPN('Suffix_2', 2, 'Suffix(null, null)').

prismToLPN('Teens_1', 1, 'Teens(ten)').
prismToLPN('Teens_1', 2, 'Teens(eleven)').
prismToLPN('Teens_1', 3, 'Teens(twelve)').
prismToLPN('Teens_1', 4, 'Teens(thirteen)').
prismToLPN('Teens_1', 5, 'Teens(fourteen)').
prismToLPN('Teens_1', 6, 'Teens(fifteen)').
prismToLPN('Teens_1', 7, 'Teens(sixteen)').
prismToLPN('Teens_1', 8, 'Teens(seventeen)').
prismToLPN('Teens_1', 9, 'Teens(eighteen)').
prismToLPN('Teens_1', 10, 'Teens(nineteen)').


